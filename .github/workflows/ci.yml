name: CI Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build-application:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 5432:5432
#    env:
#      DB_USER: ${{ secrets.DB_USER }}
#      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
#      IMAGE_NAME: my-docker-image
#      DOCKERFILE_PATH: Dockerfile
    steps:
      - uses: actions/checkout@v3

      - name: Setup Java 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'
#          cache: 'gradle'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: List test resources directory
        run: ls -R src/test/resources/

      - name: Copy application.yml if exists
        run: |
          if [ -f src/main/resources/application.yml ]; then
            cp src/main/resources/application.yml src/test/resources/application.yml
          fi

      - name: List test resources directory after copy
        run: ls -R src/test/resources/

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Run tests
        run: ./gradlew build


#      - name: Build Docker image
#        run: docker build -t ${{ env.IMAGE_NAME }} -f ${{ env.DOCKERFILE_PATH }} .
#
#      - name: Run Docker container
#        run: docker run --rm --network host -v /var/run/docker.sock:/var/run/docker.sock ${{ env.IMAGE_NAME }}
#
#      - name: Print Environment Variables
#        run: printenv | grep DB
#
#      - name: List Configuration Files
#        run: ls -R src/main/resources
#
#      - name: Print Configuration File
#        run: cat src/main/resources/application.yml
#
#      - name: Setup Testcontainers Cloud Client
#        uses: atomicjar/testcontainers-cloud-setup-action@v1
#        with:
#          token: ${{ secrets.TC_CLOUD_TOKEN }}
#
#      - name: Check Docker Version
#        run: docker --version
#
#      - name: Build with Gradle
#        run: ./gradlew build